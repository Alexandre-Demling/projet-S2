/* empty css                                    */
import { e as createComponent, f as createAstro, r as renderTemplate, l as defineScriptVars, n as renderScript, k as renderComponent, h as addAttribute, p as renderHead } from '../../chunks/astro/server_YPkzwji1.mjs';
import 'kleur/colors';
import { $ as $$HeaderDashboard } from '../../chunks/HeaderDashboard_L5qrl61F.mjs';
import { $ as $$FooterDashboard } from '../../chunks/FooterDashboard_BBVcmSux.mjs';
import PocketBase from 'pocketbase';
/* empty css                                   */
export { renderers } from '../../renderers.mjs';

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Astro = createAstro();
const prerender = false;
const $$id = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$id;
  const { id } = Astro2.params;
  const pb = new PocketBase("https://pocketbaseprojet.alexandre-demling.fr");
  let user = null;
  let error = null;
  if (id) {
    try {
      console.log("\u{1F50D} R\xE9cup\xE9ration du profil utilisateur:", id);
      user = await pb.collection("users").getOne(id);
      console.log("\u2705 Utilisateur trouv\xE9:", user.name || user.username || user.email);
      console.log("\u{1FA90} Orbite \xE9quip\xE9e dans la DB:", user.equipped_orbit);
    } catch (err) {
      console.error("\u274C Erreur lors de la r\xE9cup\xE9ration de l'utilisateur:", err);
      error = "Utilisateur non trouv\xE9";
    }
  }
  function formatDate(dateString) {
    if (!dateString) return "Date non sp\xE9cifi\xE9e";
    try {
      const date = new Date(dateString);
      if (isNaN(date.getTime())) return "Date invalide";
      const options = {
        day: "numeric",
        month: "long",
        year: "numeric"
      };
      return date.toLocaleDateString("fr-FR", options);
    } catch (e) {
      console.error("Erreur lors du formatage de la date:", e);
      return "Date invalide";
    }
  }
  function getAvatarUrl(user2) {
    if (!user2 || !user2.avatar) return null;
    try {
      return pb.files.getUrl(user2, user2.avatar);
    } catch (error2) {
      console.warn("\u26A0\uFE0F Erreur lors de la construction de l'URL avatar:", error2);
      return null;
    }
  }
  return renderTemplate(_a || (_a = __template(['<html lang="fr" data-astro-cid-hw6o6k5w> <head><meta charset="utf-8"><meta name="viewport" content="width=device-width"><title>', "</title>", "", '</head> <body class="min-h-screen bg-gradient-to-b from-purple-950 via-purple-900 to-black" data-astro-cid-hw6o6k5w> ', ' <div class="min-h-screen pt-20 pb-12" data-astro-cid-hw6o6k5w> <div class="max-w-4xl mx-auto px-4" data-astro-cid-hw6o6k5w> ', " </div> </div> ", " <!-- PocketBase JavaScript --> ", " <script>(function(){", "\n  let pb;\n  \n  document.addEventListener('DOMContentLoaded', async () => {\n    if (!userData) return;\n    \n    try {\n      pb = new PocketBase('https://pocketbaseprojet.alexandre-demling.fr');\n      await loadUserStats();\n      await loadUserOrbit();\n    } catch (error) {\n      console.error('\u274C Erreur lors de l\\'initialisation:', error);\n    }\n  });\n  \n  async function loadUserStats() {\n    try {\n      // Charger le nombre d'\xE9v\xE9nements cr\xE9\xE9s\n      const createdEvents = await pb.collection('event').getFullList({\n        filter: `users = \"${userId}\"`,\n        fields: 'id',\n      });\n      \n      document.getElementById('created-events-count').textContent = `${createdEvents.length} activit\xE9${createdEvents.length > 1 ? 's' : ''}`;\n      \n      // Charger le nombre de participations\n      const allEvents = await pb.collection('event').getFullList({\n        fields: 'id,participe',\n      });\n      \n      let participationCount = 0;\n      allEvents.forEach(event => {\n        if (event.participe && event.participe.includes(userId)) {\n          participationCount++;\n        }\n      });\n      \n      document.getElementById('participations-count').textContent = `${participationCount} participation${participationCount > 1 ? 's' : ''}`;\n      \n    } catch (error) {\n      console.error('\u274C Erreur lors du chargement des statistiques:', error);\n      document.getElementById('created-events-count').textContent = 'Erreur';\n      document.getElementById('participations-count').textContent = 'Erreur';\n    }\n  }\n  \n  async function loadUserOrbit() {\n    try {\n      console.log('\u{1FA90} Chargement de l\\'orbite \xE9quip\xE9e pour l\\'utilisateur:', userId);\n      \n      // \u2705 Essayer d'abord l'API equip.js\n      try {\n        console.log('\u{1F504} Tentative via API equip...');\n        const response = await fetch(`/api/equip?userId=${userId}`);\n        \n        if (response.ok) {\n          const equipData = await response.json();\n          console.log('\u{1F4CB} Donn\xE9es d\\'\xE9quipement re\xE7ues via API:', equipData);\n          \n          // Trouver l'orbite \xE9quip\xE9e (celle avec equipped: true)\n          const equippedOrbit = equipData.find(item => item.equipped === true);\n          \n          if (equippedOrbit) {\n            console.log('\u{1FA90} Orbite \xE9quip\xE9e trouv\xE9e via API:', equippedOrbit);\n            applyOrbit(equippedOrbit.type, equippedOrbit.name);\n            return;\n          }\n        } else {\n          console.log('\u26A0\uFE0F API equip non disponible, utilisation de la DB directement');\n        }\n      } catch (apiError) {\n        console.log('\u26A0\uFE0F Erreur API equip:', apiError);\n      }\n      \n      // \u2705 Fallback : utiliser la base de donn\xE9es directement\n      console.log('\u{1F504} R\xE9cup\xE9ration via base de donn\xE9es...');\n      const user = await pb.collection('users').getOne(userId);\n      const equippedOrbit = user.equipped_orbit || '';\n      \n      console.log('\u{1FA90} Orbite \xE9quip\xE9e dans la DB:', equippedOrbit);\n      \n      if (equippedOrbit) {\n        const orbitNames = {\n          mercure: 'Orbite Mercure',\n          venus: 'Orbite V\xE9nus',\n          terre: 'Orbite Terre',\n          mars: 'Orbite Mars'\n        };\n        \n        applyOrbit(equippedOrbit, orbitNames[equippedOrbit] || equippedOrbit);\n      } else {\n        console.log('\u2139\uFE0F Aucune orbite \xE9quip\xE9e');\n      }\n      \n    } catch (error) {\n      console.error('\u274C Erreur lors du chargement de l\\'orbite:', error);\n    }\n  }\n  \n  function applyOrbit(orbitType, orbitName) {\n    console.log('\u{1F3A8} Application de l\\'orbite:', orbitType, orbitName);\n    \n    const avatarContainer = document.getElementById('user-avatar-container');\n    const orbitClass = getOrbitClass(orbitType);\n    \n    if (avatarContainer && orbitClass) {\n      avatarContainer.classList.add(orbitClass);\n      console.log('\u2705 Orbite appliqu\xE9e:', orbitClass);\n      \n      // Ajouter une indication de l'orbite \xE9quip\xE9e\n      const orbitInfo = document.createElement('div');\n      orbitInfo.className = 'mt-3 text-center';\n      orbitInfo.innerHTML = `\n        <div class=\"inline-flex items-center gap-2 bg-white/10 rounded-full px-3 py-1 text-sm text-white/80\">\n          <span class=\"w-2 h-2 rounded-full ${getOrbitColor(orbitType)}\"></span>\n          ${orbitName} \xE9quip\xE9e\n        </div>\n      `;\n      avatarContainer.parentNode.appendChild(orbitInfo);\n    } else {\n      console.error('\u274C Impossible d\\'appliquer l\\'orbite:', { avatarContainer: !!avatarContainer, orbitClass });\n    }\n  }\n  \n  function getOrbitClass(orbitType) {\n    if (!orbitType) return '';\n    \n    const orbitClasses = {\n      mercure: 'orbit-mercure-large',\n      venus: 'orbit-venus-large', \n      terre: 'orbit-terre-large',\n      mars: 'orbit-mars-large'\n    };\n    \n    const result = orbitClasses[orbitType.toLowerCase()] || '';\n    console.log('\u{1F3AF} Classe d\\'orbite pour', orbitType, ':', result);\n    return result;\n  }\n  \n  function getOrbitColor(orbitType) {\n    const orbitColors = {\n      mercure: 'bg-gray-400',\n      venus: 'bg-yellow-400',\n      terre: 'bg-blue-400', \n      mars: 'bg-red-400'\n    };\n    \n    return orbitColors[orbitType.toLowerCase()] || 'bg-purple-400';\n  }\n})();<\/script> </body> </html> "], ['<html lang="fr" data-astro-cid-hw6o6k5w> <head><meta charset="utf-8"><meta name="viewport" content="width=device-width"><title>', "</title>", "", '</head> <body class="min-h-screen bg-gradient-to-b from-purple-950 via-purple-900 to-black" data-astro-cid-hw6o6k5w> ', ' <div class="min-h-screen pt-20 pb-12" data-astro-cid-hw6o6k5w> <div class="max-w-4xl mx-auto px-4" data-astro-cid-hw6o6k5w> ', " </div> </div> ", " <!-- PocketBase JavaScript --> ", " <script>(function(){", "\n  let pb;\n  \n  document.addEventListener('DOMContentLoaded', async () => {\n    if (!userData) return;\n    \n    try {\n      pb = new PocketBase('https://pocketbaseprojet.alexandre-demling.fr');\n      await loadUserStats();\n      await loadUserOrbit();\n    } catch (error) {\n      console.error('\u274C Erreur lors de l\\\\'initialisation:', error);\n    }\n  });\n  \n  async function loadUserStats() {\n    try {\n      // Charger le nombre d'\xE9v\xE9nements cr\xE9\xE9s\n      const createdEvents = await pb.collection('event').getFullList({\n        filter: \\`users = \"\\${userId}\"\\`,\n        fields: 'id',\n      });\n      \n      document.getElementById('created-events-count').textContent = \\`\\${createdEvents.length} activit\xE9\\${createdEvents.length > 1 ? 's' : ''}\\`;\n      \n      // Charger le nombre de participations\n      const allEvents = await pb.collection('event').getFullList({\n        fields: 'id,participe',\n      });\n      \n      let participationCount = 0;\n      allEvents.forEach(event => {\n        if (event.participe && event.participe.includes(userId)) {\n          participationCount++;\n        }\n      });\n      \n      document.getElementById('participations-count').textContent = \\`\\${participationCount} participation\\${participationCount > 1 ? 's' : ''}\\`;\n      \n    } catch (error) {\n      console.error('\u274C Erreur lors du chargement des statistiques:', error);\n      document.getElementById('created-events-count').textContent = 'Erreur';\n      document.getElementById('participations-count').textContent = 'Erreur';\n    }\n  }\n  \n  async function loadUserOrbit() {\n    try {\n      console.log('\u{1FA90} Chargement de l\\\\'orbite \xE9quip\xE9e pour l\\\\'utilisateur:', userId);\n      \n      // \u2705 Essayer d'abord l'API equip.js\n      try {\n        console.log('\u{1F504} Tentative via API equip...');\n        const response = await fetch(\\`/api/equip?userId=\\${userId}\\`);\n        \n        if (response.ok) {\n          const equipData = await response.json();\n          console.log('\u{1F4CB} Donn\xE9es d\\\\'\xE9quipement re\xE7ues via API:', equipData);\n          \n          // Trouver l'orbite \xE9quip\xE9e (celle avec equipped: true)\n          const equippedOrbit = equipData.find(item => item.equipped === true);\n          \n          if (equippedOrbit) {\n            console.log('\u{1FA90} Orbite \xE9quip\xE9e trouv\xE9e via API:', equippedOrbit);\n            applyOrbit(equippedOrbit.type, equippedOrbit.name);\n            return;\n          }\n        } else {\n          console.log('\u26A0\uFE0F API equip non disponible, utilisation de la DB directement');\n        }\n      } catch (apiError) {\n        console.log('\u26A0\uFE0F Erreur API equip:', apiError);\n      }\n      \n      // \u2705 Fallback : utiliser la base de donn\xE9es directement\n      console.log('\u{1F504} R\xE9cup\xE9ration via base de donn\xE9es...');\n      const user = await pb.collection('users').getOne(userId);\n      const equippedOrbit = user.equipped_orbit || '';\n      \n      console.log('\u{1FA90} Orbite \xE9quip\xE9e dans la DB:', equippedOrbit);\n      \n      if (equippedOrbit) {\n        const orbitNames = {\n          mercure: 'Orbite Mercure',\n          venus: 'Orbite V\xE9nus',\n          terre: 'Orbite Terre',\n          mars: 'Orbite Mars'\n        };\n        \n        applyOrbit(equippedOrbit, orbitNames[equippedOrbit] || equippedOrbit);\n      } else {\n        console.log('\u2139\uFE0F Aucune orbite \xE9quip\xE9e');\n      }\n      \n    } catch (error) {\n      console.error('\u274C Erreur lors du chargement de l\\\\'orbite:', error);\n    }\n  }\n  \n  function applyOrbit(orbitType, orbitName) {\n    console.log('\u{1F3A8} Application de l\\\\'orbite:', orbitType, orbitName);\n    \n    const avatarContainer = document.getElementById('user-avatar-container');\n    const orbitClass = getOrbitClass(orbitType);\n    \n    if (avatarContainer && orbitClass) {\n      avatarContainer.classList.add(orbitClass);\n      console.log('\u2705 Orbite appliqu\xE9e:', orbitClass);\n      \n      // Ajouter une indication de l'orbite \xE9quip\xE9e\n      const orbitInfo = document.createElement('div');\n      orbitInfo.className = 'mt-3 text-center';\n      orbitInfo.innerHTML = \\`\n        <div class=\"inline-flex items-center gap-2 bg-white/10 rounded-full px-3 py-1 text-sm text-white/80\">\n          <span class=\"w-2 h-2 rounded-full \\${getOrbitColor(orbitType)}\"></span>\n          \\${orbitName} \xE9quip\xE9e\n        </div>\n      \\`;\n      avatarContainer.parentNode.appendChild(orbitInfo);\n    } else {\n      console.error('\u274C Impossible d\\\\'appliquer l\\\\'orbite:', { avatarContainer: !!avatarContainer, orbitClass });\n    }\n  }\n  \n  function getOrbitClass(orbitType) {\n    if (!orbitType) return '';\n    \n    const orbitClasses = {\n      mercure: 'orbit-mercure-large',\n      venus: 'orbit-venus-large', \n      terre: 'orbit-terre-large',\n      mars: 'orbit-mars-large'\n    };\n    \n    const result = orbitClasses[orbitType.toLowerCase()] || '';\n    console.log('\u{1F3AF} Classe d\\\\'orbite pour', orbitType, ':', result);\n    return result;\n  }\n  \n  function getOrbitColor(orbitType) {\n    const orbitColors = {\n      mercure: 'bg-gray-400',\n      venus: 'bg-yellow-400',\n      terre: 'bg-blue-400', \n      mars: 'bg-red-400'\n    };\n    \n    return orbitColors[orbitType.toLowerCase()] || 'bg-purple-400';\n  }\n})();<\/script> </body> </html> "])), user ? `Profil de ${user.name || user.username || user.email}` : "Profil utilisateur", renderScript($$result, "C:/Users/alexa/Documents/orbite-astro/src/pages/users/[id].astro?astro&type=script&index=0&lang.ts"), renderHead(), renderComponent($$result, "HeaderDashboard", $$HeaderDashboard, { "data-astro-cid-hw6o6k5w": true }), error ? renderTemplate`<!-- Page d'erreur -->
        <div class="min-h-screen flex items-center justify-center" data-astro-cid-hw6o6k5w> <div class="max-w-2xl mx-auto text-center text-white" data-astro-cid-hw6o6k5w> <div class="mb-8" data-astro-cid-hw6o6k5w> <div class="text-8xl mb-4" data-astro-cid-hw6o6k5w>👤</div> <h1 class="text-3xl font-bold mb-4" data-astro-cid-hw6o6k5w>Utilisateur non trouvé</h1> <p class="text-xl text-purple-200 mb-6" data-astro-cid-hw6o6k5w>
L'utilisateur avec l'ID <code class="bg-purple-800 px-2 py-1 rounded" data-astro-cid-hw6o6k5w>${id}</code> n'existe pas.
</p> </div> <div class="space-y-4" data-astro-cid-hw6o6k5w> <button onclick="history.back()" class="px-6 py-3 border border-white text-white rounded-full hover:bg-white hover:text-purple-900 transition-colors" data-astro-cid-hw6o6k5w>
← Retour
</button> </div> </div> </div>` : user ? renderTemplate`<!-- Profil utilisateur -->
        <div class="bg-white/10 backdrop-blur-sm rounded-2xl border border-white/20 overflow-hidden" data-astro-cid-hw6o6k5w> <!-- Header du profil --> <div class="bg-gradient-to-r from-purple-600 to-purple-800 p-8 text-center" data-astro-cid-hw6o6k5w> <div class="flex flex-col items-center space-y-4" data-astro-cid-hw6o6k5w> <!-- Avatar avec orbite --> <div class="relative" data-astro-cid-hw6o6k5w> <div id="user-avatar-container" class="relative" data-astro-cid-hw6o6k5w> ${getAvatarUrl(user) ? renderTemplate`<img id="user-avatar"${addAttribute(getAvatarUrl(user) || "/placeholder.svg", "src")}${addAttribute(user.name || user.username || user.email, "alt")} class="w-32 h-32 rounded-full border-4 border-white/30 object-cover shadow-lg" data-astro-cid-hw6o6k5w>` : renderTemplate`<div id="user-avatar" class="w-32 h-32 rounded-full border-4 border-white/30 bg-purple-700 flex items-center justify-center shadow-lg" data-astro-cid-hw6o6k5w> <span class="text-4xl font-bold text-white" data-astro-cid-hw6o6k5w> ${(user.name || user.username || user.email || "U").substring(0, 2).toUpperCase()} </span> </div>`} </div> </div> <!-- Nom --> <div data-astro-cid-hw6o6k5w> <h1 class="text-3xl font-bold text-white mb-2" data-astro-cid-hw6o6k5w> ${user.name || user.username || "Utilisateur"} </h1> ${user.name && user.username && renderTemplate`<p class="text-purple-200 text-lg" data-astro-cid-hw6o6k5w>@${user.username}</p>`} </div> </div> </div> <!-- Contenu du profil --> <div class="p-8" data-astro-cid-hw6o6k5w> <div class="grid md:grid-cols-2 gap-8" data-astro-cid-hw6o6k5w> <!-- Informations personnelles --> <div class="space-y-6" data-astro-cid-hw6o6k5w> <h2 class="text-2xl font-bold text-white mb-4 flex items-center gap-2" data-astro-cid-hw6o6k5w> <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" data-astro-cid-hw6o6k5w> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" data-astro-cid-hw6o6k5w></path> </svg>
Informations
</h2> <div class="space-y-4" data-astro-cid-hw6o6k5w> <!-- Date de création du compte --> <div class="bg-white/5 rounded-lg p-4 border border-white/10" data-astro-cid-hw6o6k5w> <div class="flex items-center gap-3" data-astro-cid-hw6o6k5w> <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-purple-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" data-astro-cid-hw6o6k5w> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" data-astro-cid-hw6o6k5w></path> </svg> <div data-astro-cid-hw6o6k5w> <p class="text-sm text-purple-300" data-astro-cid-hw6o6k5w>Membre depuis</p> <p class="text-white font-medium" data-astro-cid-hw6o6k5w>${formatDate(user.created)}</p> </div> </div> </div> <!-- Statut de vérification --> <div class="bg-white/5 rounded-lg p-4 border border-white/10" data-astro-cid-hw6o6k5w> <div class="flex items-center gap-3" data-astro-cid-hw6o6k5w> <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-purple-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" data-astro-cid-hw6o6k5w> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" data-astro-cid-hw6o6k5w></path> </svg> <div data-astro-cid-hw6o6k5w> <p class="text-sm text-purple-300" data-astro-cid-hw6o6k5w>Statut</p> <p class="text-white font-medium" data-astro-cid-hw6o6k5w> ${user.verified ? renderTemplate`<span class="text-green-400 flex items-center gap-1" data-astro-cid-hw6o6k5w> <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" data-astro-cid-hw6o6k5w> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" data-astro-cid-hw6o6k5w></path> </svg>
Vérifié
</span>` : renderTemplate`<span class="text-yellow-400" data-astro-cid-hw6o6k5w>Non vérifié</span>`} </p> </div> </div> </div> </div> </div> <!-- Statistiques --> <div class="space-y-6" data-astro-cid-hw6o6k5w> <h2 class="text-2xl font-bold text-white mb-4 flex items-center gap-2" data-astro-cid-hw6o6k5w> <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" data-astro-cid-hw6o6k5w> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" data-astro-cid-hw6o6k5w></path> </svg>
Statistiques
</h2> <!-- Points --> <div class="bg-gradient-to-r from-yellow-500/20 to-yellow-600/20 rounded-lg p-6 border border-yellow-500/30" data-astro-cid-hw6o6k5w> <div class="text-center" data-astro-cid-hw6o6k5w> <div class="text-4xl font-bold text-yellow-400 mb-2" data-astro-cid-hw6o6k5w> ${user.points || 0} </div> <p class="text-yellow-200 font-medium" data-astro-cid-hw6o6k5w>Points totaux</p> <div class="mt-3 flex items-center justify-center gap-1 text-yellow-300 text-sm" data-astro-cid-hw6o6k5w> <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" data-astro-cid-hw6o6k5w> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z" data-astro-cid-hw6o6k5w></path> </svg>
Gagnés en participant aux activités
</div> </div> </div> <!-- Activités créées --> <div class="bg-white/5 rounded-lg p-4 border border-white/10" data-astro-cid-hw6o6k5w> <div class="flex items-center gap-3" data-astro-cid-hw6o6k5w> <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-purple-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" data-astro-cid-hw6o6k5w> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" data-astro-cid-hw6o6k5w></path> </svg> <div class="flex-1" data-astro-cid-hw6o6k5w> <p class="text-sm text-purple-300" data-astro-cid-hw6o6k5w>Activités créées</p> <p class="text-white font-medium" id="created-events-count" data-astro-cid-hw6o6k5w>Chargement...</p> </div> </div> </div> <!-- Participations --> <div class="bg-white/5 rounded-lg p-4 border border-white/10" data-astro-cid-hw6o6k5w> <div class="flex items-center gap-3" data-astro-cid-hw6o6k5w> <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-purple-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" data-astro-cid-hw6o6k5w> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" data-astro-cid-hw6o6k5w></path> </svg> <div class="flex-1" data-astro-cid-hw6o6k5w> <p class="text-sm text-purple-300" data-astro-cid-hw6o6k5w>Participations</p> <p class="text-white font-medium" id="participations-count" data-astro-cid-hw6o6k5w>Chargement...</p> </div> </div> </div> </div> </div> <!-- Bouton retour --> <div class="mt-8 pt-6 border-t border-white/10" data-astro-cid-hw6o6k5w> <button onclick="history.back()" class="w-full md:w-auto px-6 py-3 border border-white text-white rounded-full hover:bg-white hover:text-purple-900 transition-colors font-medium" data-astro-cid-hw6o6k5w>
← Retour
</button> </div> </div> </div>` : renderTemplate`<!-- État de chargement -->
        <div class="min-h-screen flex items-center justify-center" data-astro-cid-hw6o6k5w> <div class="text-center text-white" data-astro-cid-hw6o6k5w> <div class="animate-spin w-8 h-8 border-2 border-yellow-400 border-t-transparent rounded-full mx-auto mb-4" data-astro-cid-hw6o6k5w></div> <p data-astro-cid-hw6o6k5w>Chargement du profil...</p> </div> </div>`, renderComponent($$result, "FooterDashboard", $$FooterDashboard, { "data-astro-cid-hw6o6k5w": true }), renderScript($$result, "C:/Users/alexa/Documents/orbite-astro/src/pages/users/[id].astro?astro&type=script&index=1&lang.ts"), defineScriptVars({ userId: id, userData: user }));
}, "C:/Users/alexa/Documents/orbite-astro/src/pages/users/[id].astro", void 0);

const $$file = "C:/Users/alexa/Documents/orbite-astro/src/pages/users/[id].astro";
const $$url = "/users/[id]";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$id,
  file: $$file,
  prerender,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
